package nlp.future

/**
 * Created by anie on 4/26/2015
 */
object FutureRules {

  val patternFuture = List(
    "(VP < (VBG < going) < (S < (VP < TO)))",
    "(VP < (VBG < going) > (PP < TO))",
    "MD < will",
    "MD < ‘ll’",
    "MD < shall",
    "MD < would",
    "MD < 'd’",
    "VP < VBD << would",
    "MD < may",
    "MD < might",
    "MD < should",
    "MD < can",
    "MD < could",
    "VP < VBD << could",
    "MD < must",
    "MD < ought",
    "VB|VBD|VBG|VBN|VBP|VBZ < need|needs|needed|needing",
    "VP [ << have | << has | << had << having ] < ( S < ( VP < TO ))",
    "VP [ << supposed] < ( S < ( VP < TO ) )",
    "ADJP < ( JJ [ < unable ]) < ( S < ( VP < TO ))",
    "ADJP < ( JJ [ < able]) < ( S < ( VP < TO ))",
    "VP < ( PP < ( IN < about|of ) < ( S < ( VP <+( VP ) VBG )))",
    "SBAR < WHNP|WHADVP < (S < (VP < TO ))",
    "S < ( VP < TO < ( VP < VB ))",
    "VP [ << look | << looks | << looking]  << forward",
    "VP << want|wants|wanted|wanting|hope|hopes|hoped|hoping",
    "goal|goals|ambition",
    "upcoming|future|impending",
    "plan|plans|planned",
    "NP << need|needs",
    "tomorrow|soon|later",
    "NP << (week|weekend|month|year| ,, next)",
    "tonight",
    "NP << (week|weekend|month|year| ,, this)",
    "NP << this [ << ( weekend ,, this ) | << ( evening ,, this )]",
    "IN $ (NP < CD << hours|days|weeks|months|seasons|years)",
    "IN $ (NP < DT <<  hour|day|week|weekend|month|season|year)",
    "JJ < next $ (NN < hour|day|week|weekend|month|season|year)",
    "IN < CD << hour|day|week|weekend|month|season|year"
  )

  val patternFuture2 = List(
    "MD < will|'ll",
    "MD < wo",
    "MD < shall",
    "MD < would|'d",
    "MD < may",
    "MD < might",
    "MD < should",
    "MD < can",
    "MD < ca",
    "MD < could",
    "MD < must",
    "VBG < gon",
    "(VBG < going) < (S < (VP < TO))",
    "S|VP|ADJP|ADVP < (IN|RB < about) $ (S < (VP < TO))",
    "S < (RB < about|About) < (VP < (TO < to))",
    "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /need/) < (S < ( VP < TO))",
    "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /need/) < NP",
    "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /hav|had/) < (S < (VP < TO))",
    "VP < (VBN < supposed) < (S < (VP < TO))",
    "S < (NP $ (RB < better) $ VP)",
    "S < (NP $ (ADVP <<# better) $ VP)",
    "VB|VBD|VBG|VBN|VBP|VBZ < /want/",
    "VBP < wan",
    "VP < (PP < (IN < about|of ) !< (RB < instead) < ( S < ( VP <+(VP) VBG)))",
    "ROOT < (S|SQ <, (VP !< TO|S !< VBG))",
    "ROOT < (S|SQ <, INTJ < (VP !< TO|S !< VBG))",
    "SBAR < WHNP|WHADVP < (S < (VP < TO ))",
    "VP !< (__ < /seem|appear|happen/) < (S < ( VP < TO < VP))",
    "ADJP < (JJ < able|enough|willing) < (S < ( VP < TO < VP))  ",
    "ADJP < (JJ < likely|excited) < (S < ( VP < TO < VP))",
    "NP < (S < ( VP < TO < VP))        	",
    "S < VP  << /look/ << forward",
    "VB|VBD|VBG|VBN|VBP|VBZ << /hope|hoping/",
    "B|VBD|VBG|VBN|VBP|VBZ < plan|plans|planned|planning",
    "VP < (MD < ca) < (VP < (VB < wait))",
    "VP < (MD < could) < (RB < n't) < (VP < (VB < wait))",
    "VB|VBD|VBG|VBN|VBP|VBZ < /choos/",
    "VB|VBD|VBG|VBN|VBP|VBZ < /schedul/",
    "VB|VBD|VBG|VBN|VBP|VBZ < /consider/",
    "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /figur/) < (PRT < (RP < out))",
    "NN|NNS < need",
    "NN|NNS << /hope/",
    "NN|NNS < /goal/",
    "NN|NNS < plan|plans",
    "JJ|NN < due",
    "NN < future",
    "NN|NNS < /schedule/",
    "NN|NNS < /consequence/",
    "NN|NNS < /choice/",
    "VBG|JJ < upcoming",
    "JJ < imminent",
    "JJ < future",
    "JJ < potential",
    "JJ < impending",
    "JJ < ready",
    "RB < potentially",
    "RB < soon",
    "RB < ahead",
    "RB < sometime",
    "RB < finna|funna"
  ) //60 rules

  val patternFuture2_1 = List(
    "ADJP < (JJ < able|enough|willing) < (S < (VP < TO < VP))",
    "ADJP < (JJ < likely|excited) < (S < (VP < TO < VP))",
    "S|VP|ADJP|ADVP < (IN|RB < about) $ (S < (VP < TO))",
    "S < (RB < about) < (VP < (TO < to))",
    "NP < (S < (VP < TO < VP))",
    "SBAR < WHNP|WHADVP < (S < (VP < TO))",
    "VP !< (__ < /seem|appear|happen/) < (S < ( VP < TO < VP))",
    "VP < (PP < (IN < about|of ) !< (RB < instead) < (S < ( VP <+(VP) VBG)))",
    "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /need/) < (S < ( VP < TO))",
    "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /need/) < NP",
    "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /hav|had/) < (S < (VP < TO))",
    "VP < (VBN < supposed) < (S < (VP < TO))",
    "VB|VBD|VBG|VBN|VBP|VBZ < /want/",
    "VBP < wan",
    "S < (NP $ (RB < better) $ VP)",
    "S < (NP $ (ADVP <<# better) $ VP)",
    "VP < (MD < /ought/) < (S < ( VP < TO))",
    "ROOT < (S|SQ <, (VP !< TO|S !< VBG))",
    "ROOT < (S|SQ <, INTJ < (VP !< TO|S !< VBG))",
    "ROOT < (S|SQ <, (NP < (NN < someone|somebody)) < (VP < VB|VBP !< TO|S !< VBG))",
    "VBG < gon",
  "(VBG < going) < (S < (VP < TO))",
  "MD < will|'ll",
  "MD < wo",
  "MD < shall",
  "MD < would|'d",
  "MD < may",
  "MD < might",
  "MD < should",
  "MD < can",
  "MD < ca",
  "MD < could",
  "MD < must",
  "VP < (MD < ca) < (VP < (VB < wait))",
  "VP < (MD < could) < (RB < n't) < (VP < (VB < wait))",
  "S < VP << /look/ << forward",
  "VB|VBD|VBG|VBN|VBP|VBZ << /hope|hoping/",
  "VB|VBD|VBG|VBN|VBP|VBZ < plan|plans|planned|planning",
  "VB|VBD|VBG|VBN|VBP|VBZ < /choos/",
  "VB|VBD|VBG|VBN|VBP|VBZ < /schedul/",
  "VB|VBD|VBG|VBN|VBP|VBZ < /consider/",
  "VP < (VB|VBD|VBG|VBN|VBP|VBZ < /figur/) < (PRT < (RP < out))",
  "NN|NNS < need",
  "NN|NNS << /hope/",
  "NN|NNS < /goal/",
  "NN|NNS < /choice/",
  "NN|NNS < /consequence/",
  "NN|NNS < plan|plans",
  "NN|NNS < /schedule/",
  "NN|JJ < due",
  "NN|JJ < future",
  "VBG|JJ < upcoming",
  "JJ < imminent",
  "JJ < future",
  "JJ < impending",
  "JJ < ready",
  "JJ < potential",
  "RB < soon",
  "RB < ahead",
  "RB < sometime",
  "RB < potentially",
  "RB < finna|funna",
  "NN|RB < tonight",
  "NN|RB < tomorrow",
  "(PP  < (IN < from) < (NP|ADVP < (RB < now)))",
  "NP < (RBR|RB|JJ < later) < (DT < this)",
  "NP|VP < (ADVP|NP < (JJ|RB < later)) < (NP|NN < today)",
  "S <+ (!S) (PP < (IN < at) < (NP < CD)) !<< VBD !<< (VP [ < (VB < have) | < (VBP [ < have | < 've ] ) | < (VBZ [ < has | < 's ] ) ] < (VP < VBN))",
  "S <+ (!S) (RB < later) !<< VBD !<< (VP [ < (VB < have) | < (VBP [ < have | < 've ] ) | < (VBZ [ < has | < 's ] ) ] < (VP < VBN))"
  ) //69 rules

  val patternsPast = List(
    "VBD",
    "VP [ < ( VB < have ) | < ( VBP [ < have | < 've ] ) | < ( VBZ [ < has | < 's ] ) ] < ( VP < VBN )",
    "S < (when < VBD) <<  MD < would",
    "VP [ < ( VB [ < remember | < miss | < regret | < recall | < recollect ] ) | < ( VBP [ < remember | < miss | < regret | < recall | < recollect ] ) | < ( VBZ [ < remembers | < misses | < regrets | < recalls | < recollects ] ) ] < NP",
    "forgets|forgot|forgotten|forget !.to",
    "VP [ < ( VB < thank ) | < ( VBP < thank ) | < ( VBZ < thanks ) | < ( VBG < thanking ) ] < ( PP < ( IN < for ) )",
    "VP << wish|wishes|wished|wishing",
    "NP < ( JJ|NN < past )",
    "NP < ( NP < ( NNS [ < thanks | < congratulations | < congrats | < props | < kudos | < praise ] ) ) < ( PP < ( IN < for ) )",
    "NP << regret|regrets",
    "yesterday",
    "NP < (JJ < last) < (NN < week|weekend|month|year)",
    "NP < (JJ < last) < (NNS < weeks|weekends|months|years)",
    "proud . of|former|previous",
    "ago",
    "so.far"
  ) //16

  val patternPresent = List("VBZ", "VBG", "VBP")

}
